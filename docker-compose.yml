version: "3.7"
services:
  server:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    container_name: server
    volumes:
      - .:/usr/src/app/
      - django-static:/server/staticfiles
    env_file:
      - ./.env/.local
    command: /start
    depends_on:
      - db
      - redis
    networks:
      - nginx_network

  db:
    image: postgres:14-alpine
    container_name: bot_constructor_db
    volumes:
      - database_data:/var/lib/postgresql/data
      - django-static:/backend/static
    ports:
      - "8082:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - nginx_network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data:rw
    container_name: bot_constructor_redis
    networks:
      - nginx_network

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: bot_constructor_celery_worker
    command: /start-celeryworker
    volumes:
      - .:/usr/src/app/
    env_file:
      - ./.env/.local
    depends_on:
      - redis
      - db
    networks:
      - nginx_network

#  celery_beat:
#    build:
#      context: .
#      dockerfile: ./compose/local/django/Dockerfile
#    image: bot_constructor_celery_beat
#    command: /start-celerybeat
#    volumes:
#      - .:/usr/src/app/
#    env_file:
#      - ./.env/.local
#    depends_on:
#      - redis
#      - db
#    networks:
#      - nginx_network
#
#  celery_flower:
#    build:
#      context: .
#      dockerfile: ./compose/local/django/Dockerfile
#    image: bot_constructor_celery_flower
#    command: /start-flower
#    volumes:
#      - .:/usr/src/app/
#    env_file:
#      - ./.env/.local
#    ports:
#      - 5555:5555
#    depends_on:
#      - redis
#      - db
#    networks:
#      - nginx_network

  client:
    container_name: client
    build:
      context: .
      dockerfile: ./compose/local/vue/Dockerfile
    volumes:
      - ./client:/app/
      - /app/node_modules
    ports:
      - "8080:8080"
    depends_on:
      - server
    environment:
      - NODE_ENV=development
    networks:
      - nginx_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8000:80"
    depends_on:
      - server
    volumes:
      - ./nginx/dev.conf:/etc/nginx/nginx.conf
      - django-static:/usr/src/app/static
    networks:
      - nginx_network

volumes:
  database_data: { }
  redis_data: { }
  django-static:

networks:
  nginx_network:
    driver: bridge